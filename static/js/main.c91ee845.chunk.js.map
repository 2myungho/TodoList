{"version":3,"sources":["todo/TodoHead.js","todo/TodoListItem.js","todo/TodoList.js","todo/TodoInsert.js","todo/Todo.js","news/NewsListItem.js","news/NewsList.js","news/NewsHead.js","news/NewsPage.js","news/News.js","Tab.js","Template.js","Time.js","App.js","serviceWorker.js","index.js"],"names":["TodoHeadBg","styled","div","TodoHead","checked","className","React","memo","todo","onRemove","onToggle","id","text","cn","onClick","TodoListBlock","TodoList","todos","map","key","TodoInsert","onInsert","useState","value","setValue","open","setOpen","onChange","useCallback","e","target","onSubmit","preventDefault","placeholder","Todo","setTodos","filter","length","nextId","useRef","todoList","current","concat","todoId","article","title","desctiption","url","urlToImage","href","rel","src","alt","NewsListBlock","NewsList","category","articles","setArticles","loading","setLoading","useEffect","a","query","axios","get","response","data","console","log","fetchData","categories","name","Categories","NavLink","NewsHead","onSelect","c","activeClassName","exact","to","NewsPaage","match","params","News","path","component","NewsPage","activeStyle","background","color","TemplateBlock","Template","Times","Time","today","Date","Month","getMonth","date","getDate","Day","getDay","date0","App","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c91ee845.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components'\r\n\r\nconst TodoHeadBg = styled.div`\r\n        background:#0f4c82;\r\n        height:80px;\r\n        line-height:60px;\r\n        padding:10px 25px;\r\n        box-sizing:border-box;\r\n        color:#fff;\r\n        .date{\r\n            font-size:16px;\r\n        }\r\n        .listBox{\r\n            font-weight:bold;\r\n            font-size:26px;\r\n            overflow:hidden;\r\n            div{\r\n                display:inline-block;\r\n            }\r\n            .left{\r\n                float:left;\r\n            }\r\n            .right{\r\n                float:right;\r\n            }\r\n        }\r\n    `\r\n\r\nconst TodoHead = ({ checked }) => {\r\n    return (\r\n        <TodoHeadBg>\r\n            <div className=\"listBox\">\r\n                <div className=\"left\">Do it now!</div>\r\n                <div className=\"right\">{checked}</div>\r\n            </div>\r\n        </TodoHeadBg>\r\n    );\r\n};\r\n\r\nexport default TodoHead;","import React from 'react';\r\nimport { IoMdCheckboxOutline, IoIosSquareOutline, IoIosTrash } from 'react-icons/io';\r\nimport './TodoListItem.scss'\r\nimport cn from 'classnames';\r\n\r\nconst TodoListItem = ({ todo,onRemove,onToggle}) => {\r\n    const { id, text, checked } = todo\r\n    return (\r\n        <div className=\"item\">\r\n            <div className={cn('checkBox',{checked})} onClick={()=>onToggle(id)}>\r\n                {checked ? <IoMdCheckboxOutline /> : <IoIosSquareOutline />}\r\n                <div className=\"text\">{text}</div>\r\n            </div>\r\n\r\n            <div className=\"remove\" onClick={() => onRemove(id)}>\r\n                <IoIosTrash />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default React.memo(TodoListItem);","import React from 'react';\r\nimport styled from 'styled-components'\r\nimport TodoListItem from './TodoListItem'\r\n\r\nconst TodoListBlock = styled.div`\r\n        height:500px;\r\n        overflow-y: auto;\r\n        box-sizing:border-box;\r\n        border-radius:0 0 12px 12px;\r\n        background:#fff;\r\n        padding-top:10px;\r\n        ::-webkit-scrollbar {\r\n            width: 12px;\r\n          }\r\n        ::-webkit-scrollbar-thumb {\r\n            background-color: #b6c2fa;\r\n            border-radius: 10px;\r\n            background-clip: padding-box;\r\n            border: 2px solid transparent;\r\n          }\r\n        ::-webkit-scrollbar-track {\r\n            background-color: #e9edff;\r\n            border-radius: 10px;\r\n            box-shadow: inset 0px 0px 5px white;\r\n    `\r\n\r\nconst TodoList = ({todos,onRemove,onToggle}) => {\r\n    return (\r\n        <TodoListBlock>\r\n            {todos.map(todo => (\r\n                <TodoListItem key={todo.id} todo={todo} onRemove={onRemove} onToggle={onToggle} />\r\n            ))}\r\n        </TodoListBlock>\r\n    );\r\n};\r\n\r\nexport default TodoList;","import React,{useState,useCallback} from 'react';\r\nimport './TodoInsert.scss'\r\nimport {IoIosAddCircle} from 'react-icons/io';\r\nimport cn from 'classnames';\r\n\r\nconst TodoInsert = ({onInsert}) => {\r\n\r\n    const [value,setValue] = useState('')\r\n    const [open,setOpen] = useState(false)\r\n\r\n    const onChange = useCallback(\r\n        e => {\r\n            setValue(e.target.value)\r\n        },\r\n        []\r\n    )\r\n\r\n    const onSubmit = useCallback(\r\n        e => {\r\n            onInsert(value)\r\n            setValue('')\r\n            e.preventDefault()\r\n        },\r\n        [onInsert,value]\r\n    )\r\n    \r\n    const onClick = useCallback(\r\n        () => setOpen(!open)\r\n        ,[open]\r\n    )\r\n\r\n    return (\r\n        <form onSubmit={onSubmit}>\r\n            {open &&(\r\n                <input\r\n                className=\"textInput\" \r\n                placeholder=\"할 일을 입력 후,  Enter을 눌러주세요.\"\r\n                value={value}\r\n                onChange={onChange}\r\n                />\r\n            )}\r\n            <div className={cn('circleBtn',{open})} onClick={onClick}>\r\n                <IoIosAddCircle />\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default TodoInsert;","import React,{useState,useCallback,useRef} from 'react';\r\nimport TodoHead from './TodoHead'\r\nimport TodoList from './TodoList'\r\nimport TodoInsert from './TodoInsert'\r\n\r\nconst Todo = () => {\r\n\r\n    const [todos,setTodos] = useState([\r\n        {\r\n            id:0,\r\n            text:'Redux와 미들웨어 공부하기',\r\n            checked:true\r\n        },\r\n        {\r\n            id:1,\r\n            text:'node js와 express 공부하기',\r\n            checked:false\r\n        },\r\n        {\r\n            id:2,\r\n            text:'포트폴리오 제작하기',\r\n            checked:false\r\n        }\r\n    ])\r\n\r\n    //List\r\n    const checked = todos.filter(todo => !todo.checked).length\r\n\r\n    //insert\r\n    const nextId = useRef(3)\r\n    const onInsert = useCallback(\r\n        text => {\r\n            const todoList = {\r\n                id:nextId.current,\r\n                text,\r\n                checked:false\r\n            }\r\n            setTodos(todos => todos.concat(todoList))\r\n            nextId.current += 1;\r\n        }\r\n        ,[]\r\n    )\r\n\r\n    const onRemove = useCallback(\r\n        id => {\r\n            setTodos(todo => todo.filter(todoId => todoId.id !==id))\r\n        }\r\n        ,[]\r\n    )\r\n\r\n    const onToggle = useCallback(\r\n        id => {\r\n            setTodos(\r\n                todo => todo.map(todoId => todoId.id === id ? {...todoId,checked: !todoId.checked} : todoId)\r\n            )\r\n        },\r\n        []\r\n    )\r\n\r\n    return (\r\n        <div>\r\n            <TodoHead checked={checked} />\r\n            <TodoList todos={todos} onRemove={onRemove} onToggle={onToggle} />\r\n            <TodoInsert onInsert={onInsert} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Todo;","import React from 'react';\r\nimport './NewsListItem.scss'\r\n\r\nconst NewsListItem = ({ article }) => {\r\n    const { title, desctiption, url, urlToImage } = article\r\n    return (\r\n        <div className=\"newsListItem\">\r\n            {urlToImage && (\r\n                <div className=\"thumbnail\">\r\n                    <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        <img src={urlToImage} alt=\"thumbnail\" />\r\n                    </a>\r\n                </div>\r\n            )}\r\n            <div className=\"contents\">\r\n                <h2>\r\n                    <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        {title}\r\n                    </a>\r\n                </h2>\r\n                <p>{desctiption}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default React.memo(NewsListItem);","import React,{useState,useEffect} from 'react';\r\nimport NewsListItem from './NewsListItem';\r\nimport styled from 'styled-components'\r\nimport axios from 'axios'\r\n\r\nconst NewsListBlock = styled.div`\r\n    box-sizing:border-box;\r\n    height:500px;\r\n    padding:20px;\r\n    background:#fff;\r\n    border-radius:12px;\r\n    overflow-y:auto;\r\n    .wait{\r\n        font-weight:bold;\r\n    }\r\n    ::-webkit-scrollbar {\r\n        width: 12px;\r\n      }\r\n    ::-webkit-scrollbar-thumb {\r\n        background-color: #b6c2fa;\r\n        border-radius: 10px;\r\n        background-clip: padding-box;\r\n        border: 2px solid transparent;\r\n      }\r\n    ::-webkit-scrollbar-track {\r\n        background-color: #e9edff;\r\n        border-radius: 10px;\r\n        box-shadow: inset 0px 0px 5px white;\r\n`\r\n\r\nconst NewsList = ({category}) => {\r\n    const [articles,setArticles] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            setLoading(true);\r\n            try{\r\n                const query = category === 'all' ? '' : `&category=${category}`\r\n                const response = await axios.get(\r\n                    `https://newsapi.org/v2/top-headlines?country=kr${query}&apiKey=668dde934af742d0baa151184e638009`\r\n                )\r\n                setArticles(response.data.articles)\r\n            } catch(e){\r\n                console.log(e);\r\n            }\r\n            setLoading(false);\r\n        }\r\n        fetchData();\r\n    },[category])\r\n    \r\n\r\n    if(loading){\r\n        return <NewsListBlock className=\"wait\">잠시만 기다려주세요...</NewsListBlock>\r\n    }\r\n    if(!articles){\r\n        return <NewsListBlock></NewsListBlock>\r\n    }\r\n\r\n    return (\r\n        <NewsListBlock>\r\n            {articles.map(article => (\r\n                <NewsListItem key={article.url} article={article} />\r\n            ))}\r\n        </NewsListBlock>\r\n    );\r\n};\r\n\r\nexport default NewsList;","import React from 'react';\r\nimport './NewsHead.scss';\r\nimport {NavLink} from 'react-router-dom';\r\nimport styled from 'styled-components'\r\n\r\nconst categories = [\r\n    {\r\n        name: 'all',\r\n        text: '전체보기'\r\n    },\r\n    {\r\n        name: 'business',\r\n        text: '비즈니스'\r\n    },\r\n    {\r\n        name: 'entertainment',\r\n        text: '엔터테이먼트'\r\n    },\r\n    {\r\n        name: 'health',\r\n        text: '건강'\r\n    },\r\n    {\r\n        name: 'science',\r\n        text: '과학'\r\n    },\r\n    {\r\n        name: 'sport',\r\n        text: '스포츠'\r\n    },\r\n    {\r\n        name: 'technology',\r\n        text: '기술'\r\n    }\r\n]\r\n\r\nconst Categories = styled(NavLink)`\r\n    &.active{\r\n        border-bottom:2px solid #a6ddff;\r\n        color:#a6ddff;\r\n    }\r\n`\r\n\r\nconst NewsHead = ({onSelect,category}) => {\r\n    return (\r\n        <div className=\"NewsHead\">\r\n            <div className=\"categorieBlock\">\r\n                {categories.map(\r\n                    c => (\r\n                        <Categories key={c.name} \r\n                        activeClassName=\"active\"\r\n                        className=\"categories\"\r\n                        exact={c.name === 'all'}\r\n                        to={c.name === 'all' ? '/TodoList/news/' : `/TodoList/news/${c.name}`}\r\n                        >\r\n                            {c.text}\r\n                        </Categories>\r\n                    )\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NewsHead;","import React from 'react'\r\nimport NewsList from './NewsList'\r\nimport NewsHead from './NewsHead'\r\n\r\nconst NewsPaage = ({match}) => {\r\n    const category = match.params.category || 'all'\r\n\r\n    return (\r\n        <div>\r\n            <NewsHead/>\r\n            <NewsList category={category} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NewsPaage;","import React from 'react';\r\nimport {Route} from 'react-router-dom'\r\nimport NewsPage from './NewsPage'\r\n\r\nconst News = () => {\r\n    return <Route path=\"/TodoList/news/:category?\" component={NewsPage} />\r\n};\r\n\r\nexport default News;","import React from 'react';\r\nimport Todo from './todo/Todo'\r\nimport News from './news/News'\r\n\r\nimport {Route, NavLink} from 'react-router-dom'\r\nimport './Tab.scss'\r\n\r\nconst Tab = () => {\r\n\r\n    const activeStyle = {\r\n        background:'#0f4c82',\r\n        color:'#fff'\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ul className=\"TabList\">\r\n                <li>\r\n                    <NavLink to=\"/TodoList/\" activeStyle={activeStyle} exact={true} className=\"TabItem\">\r\n                        TodoList\r\n                    </NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/TodoList/news/\" activeStyle={activeStyle} className=\"TabItem\">\r\n                        Today News\r\n                    </NavLink>\r\n                </li>\r\n            </ul>\r\n\r\n            <Route path=\"/TodoList/\" component={Todo} exact={true}/>\r\n            <Route path=\"/TodoList/news/\" component={News}/>\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default React.memo(Tab);","import React from 'react';\r\nimport styled from 'styled-components'\r\nimport Tab from './Tab'\r\n\r\nconst TemplateBlock = styled.div`\r\n    width:500px;\r\n    margin:150px auto 0;\r\n    position:relative;\r\n`\r\n\r\nconst Template = () => {\r\n    return (\r\n        <TemplateBlock>\r\n            <Tab />\r\n        </TemplateBlock>\r\n    )\r\n};\r\n\r\nexport default Template;","import React from 'react';\r\nimport styled from 'styled-components'\r\n\r\nconst Times = styled.div`\r\n    position:fixed;\r\n    top:5%;\r\n    left:50%;\r\n    transform: translate(-50%,0);\r\n    .day{\r\n        font-size:20px;\r\n        font-weight:600;\r\n        color:#6b84fc;\r\n        text-align:center;\r\n    }\r\n    .date{\r\n        font-size:32px;\r\n        margin-right:10px;\r\n        color:#0f4c82;\r\n    }\r\n    .month{\r\n        font-size:32px;\r\n        color:#0f4c82;\r\n    }\r\n`\r\n\r\nconst Time = () => {\r\n    const week = ['Sunday','Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday',]\r\n    const month = ['January','Feburary','March','April','May','June','July','August','September','October','November','December']\r\n\r\n    const today = new Date();\r\n    const Month = month[today.getMonth()]\r\n    const date = today.getDate();\r\n    const Day = week[today.getDay()]\r\n\r\n    //const Month0 = `${Month < 10 ? `0${Month}` : Month}`\r\n    const date0 = `${date < 10 ? `0${date}` : date}`\r\n\r\n    return <Times className=\"date\">        \r\n            <div><span className=\"date\">{date0}</span> <span className=\"month\">{Month}</span></div>\r\n            <p className=\"day\">{Day}</p>\r\n        </Times>\r\n};\r\n\r\nexport default Time;","import React from 'react';\nimport Template from './Template'\nimport './App.scss'\nimport Time from './Time'\n\n\nfunction App() {\n  return (\n    <>\n      <Time />\n      <Template />\n    </>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}